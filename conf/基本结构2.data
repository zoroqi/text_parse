数据结构设计
1:	从需求出发(希望数据输出样式,数据字段,匹配方法)
2:	设计内存中数据结构
3:	最后考虑文本序列话


保留字段 可以写在模板中的
data	:	数据块(一块数据),一个data中必须有dataReges作为数据块正则,循环匹配
dataReges	:	块正则
imgUrl	:	图片(图片,追加base64编码)
word_*	:	以word开头的字段 词汇(自动汇聚成表)
SearchURL	:	网址包换${KEYWORD} 与SearchWord进行合并
SearchWord	:	要进行采集的词汇
charset	:url编码
pageData	:	页面数据,页面正则部分,所有页面生成数据均在pageData下
urlList	:指定url进行采集 如果书写urlList 则跳过 searchURL只进行urlList内url数据提取
urlList 数据以key:value形式存在

不可以写在模板中
imgBase64	:	图片base64编码(自动生成)
DREREFERENCE	:	唯一标示符

pageData标签内没有个子串

{
    "SearchURL": "http://www.bing.com/knows/search?q=${KEYWORD}&mkt=zh-cn",
    "SearchWord": "身份证;户口本",
    "charset": "utf-8",
    "urlList": {
        "身份证": "http://www.bing.com/knows/search?q=%E8%BA%AB%E4%BB%BD%E8%AF%81&mkt=zh-cn",
        "户口": "http://www.bing.com/knows/search?q=%E6%88%B7%E5%8F%A3&mkt=zh-cn"
    },
    "pageData": {
        "dataRegex": "<html[\\s\\S]*?</html>",
        "abstract": {
            "dataRegex": "<div class=\"bk_b_container\">[\\s\\S]*?</a></p></div></div></div>",
            "keyWord": "<h1>(.+?)</h1>",
            "keyWord2": "</h1><span>(.+?)</span></div>",
            "imgUrl": "<img class=\"rms_img\".*?src=\"(.*?)\"",
            "content": "<div class=\"bk_image_bottomright\">([\\s\\S]*?)<div class=\"bk_moreContent\">"
        },
        "abortWord": {
            "dataRegex": "<div class=\"bk_sidebar_section\" id=\"sidebar_rel\">[\\s\\S]*?</span></a></div></div></div><script",
            "data": {
                "dataRegex": "<div class=\"bk_sidebar_related_img\">[\\s\\S]*?</p></div>",
                "word": "h=\"ID=.*?>([^>]*?)</a></p>",
                "word2": "<p class=\"bk_sidebar_related_tag\">(.*?)</p></div>"
            }
        },
        "question": {
            "dataRegex": "<div class=\"bk_qtable_title\">[\\s\\S]*?<a id=\"questionSeqNum1\">",
            "keyWord": "<h2>(.+?)</h2>",
            "data": {
                "dataRegex": "<div class=\"bk_qtable_cell\">[\\s\\S]*?</a></div></div>",
                "word": "h=\"ID=.*?>(.*?)</a></div></div>",
                "number": "<div class=\"bk_qtable_index\"><span>(.*?)<"
            }
        }
    }
}


{
    "reference": "",
    "url": "",
    "pageType": "页面类型 list/content",
    "purl": "",
    "parse": "解析方法",
    "data": {
        "key": {
            "type": "字段/块 field/block(块在没有data时循环value)",
            "value": "要解析 内容",
            "handle": {
                "timeformat": "时间format/url不足/图片处理",
                "regex": "对提取的数据进行更细的正则处理"
            },
            "data": {}
        }
    }
}

{
    "reference": "",
    "url": "url",
    "pageType": "",
    "purl": "",
    "parse": "regex",
    "data": {
        "key": {
            "type": "field",
            "value": "<(.*?)>"
        },
        "key2": {
            "type": "block",
            "value": "<(.*?)>",
            "data": {
                "key": {
                    "value.type": "field",
                    "value": "<(.*?)>"
                }
            }
        },
        "key3": {
            "type": "field",
            "value": "<(.*?)>",
            "handle": {
                "timeformat": "yyyy-MM-hh"
            }
        }
    }
}


{
    "reference": "",
    "url": "url",
    "pageType": "",
    "purl": "",
    "data": {
        "key1": "value1",
        "key2": [
            {"key":"value21"},
            {"key":"value22"},
            {"key":"value23"}
        ],
        "key3": "122222222222"
    }
}